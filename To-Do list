class To_Do_List:
    def __init__(self):
        self.tasks = []

    def To_add_task(self, task):
        self.tasks.append(task)
        print(f'Task "{task}" added successfully!')

    def To_view_tasks(self):
        if not self.tasks:
            print("Your to-do list is empty.")
        else:
            print("Your To-Do List:")
            for index, task in enumerate(self.tasks, start=1):
                print(f"{index}. {task}")

    def To_complete_task(self, task_number):
        if 1 <= task_number <= len(self.tasks):
            completed_task = self.tasks.pop(task_number - 1)
            print(f'Task "{completed_task}" marked as completed!')
        else:
            print("Invalid task number. Please try again.")

    def To_delete_task(self, task_number):
        if 1 <= task_number <= len(self.tasks):
            deleted_task = self.tasks.pop(task_number - 1)
            print(f'Task "{deleted_task}" deleted successfully!')
        else:
            print("Invalid task number. Please try again.")


def main():
    todo_list = To_Do_List()

    while True:
        print("\nMenu:")
        print("1. Add Task")
        print("2. View Tasks")
        print("3. Mark Task as Completed")
        print("4. Delete Task")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            task = input("Enter the task: ")
            todo_list.To_add_task(task)

        elif choice == "2":
            todo_list.To_view_tasks()

        elif choice == "3":
            task_number = int(input("Enter the task number to mark as completed: "))
            todo_list.To_complete_task(task_number)

        elif choice == "4":
            task_number = int(input("Enter the task number to delete: "))
            todo_list.To_delete_task(task_number)

        elif choice == "5":
            print("Exiting the To-Do List application. Goodbye!")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 5.")


if __name__ == "__main__":
    main()
